# Description: Penetration testing framework
# URL:         https://www.metasploit.com
# Depends on:  inetutils libpcap postgresql ruby sqlite3

name=metasploit
version=6.3.18
release=1
source=https://github.com/rapid7/$name-framework/archive/$version/$name-$version.tar.gz

build() {
	export TMPDIR="$PKGMK_WORK_DIR"
	export CFLAGS="$CFLAGS -I/usr/include/libxml2"

	install -d $PKG/usr/bin $PKG/opt

	cp -a $name-framework-$version $PKG/opt/$name
	cd $PKG/opt/$name

	# https://github.com/bundler/bundler/issues/6882
	sed -e '/BUNDLED WITH/,+1d' -i Gemfile.lock
	sed -i '/bundler/ s/~>/>=/g' metasploit-framework.gemspec
	bundle config build.nokogiri --use-system-libraries
	bundle config set deployment true
	bundle config set no-cache true
	bundle config set --local path vendor/bundle
	bundle config set --local without development test
	sed 's|git ls-files|find -type f|' -i metasploit-framework.gemspec
	bundle install -j ${JOBS:-1}

	# reproducible build: don't leak jobs count
	sed -i '/BUNDLE_JOBS/d' .bundle/config

	# fix perms
	find vendor/bundle/ruby -exec chmod o+r '{}' \;
	find vendor/bundle/ruby -exec chmod o-w '{}' \;

	for f in msf*; do
		_msffile=$PKG/usr/bin/$(basename $f)

		cat >${_msffile} <<EOF
#!/bin/sh
BUNDLE_GEMFILE=/opt/$name/Gemfile \
bundle exec ruby /opt/$name/$(basename $f) \$@
EOF
		chmod 0755 ${_msffile}
	done

	for f in tools/*/*.rb; do
		install -m 755 -D $f .$f
		cat >$f <<EOF
#!/bin/sh
BUNDLE_GEMFILE=/opt/$name/Gemfile \
bundle exec ruby /opt/$name/.$f \$@
EOF
		chmod 755 $f
	done

	#install -Dm 644 external/zsh/_* \
	#	-t "$PKG/usr/share/zsh/site-functions"

	# remove junk
	rm $PKG/usr/bin/msfupdate
	rm -r vendor/bundle/ruby/*/cache
	rm -r external/serialport/debian
	find $PKG  -depth -type f \(       \
		   -name gen_make.out      \
		-o -name mkmf.log          \
		-o -name .codeclimate.yml  \
		-o -name .dockerignore     \
		-o -name .gitignore        \
		-o -name .rubocop.yml      \
		-o -name .travis.yml       \
		-o -name CHANGELOG\*       \
		-o -name CHANGES\*         \
		-o -name COPYING           \
		-o -name ChangeLog\*       \
		-o -name Dockerfile        \
		-o -name LICENSE\*         \
		-o -name NEWS\*            \
		-o -name README\*          \
		-o -name SECURITY\*        \
		-o -name THANKS            \
		-o -name TODO              \
		-o -name VERSION           \
		-o -name \*-LICENSE\*      \
		-o -name \*.md             \
		-o -name Makefile          \
		-o -name LICENCE           \
		-o -name AUTHORS           \
		-o -name BUGS              \
		-o -name INSTALL           \
		-o -iname readme.txt       \
		\) -delete ,               \
		-type d -name .github -exec rm -r {} +

	# remove empty dirs
	find $PKG -depth -type d -empty -delete
}
